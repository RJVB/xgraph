#!/bin/sh

# make sure the most obvious elements are in the PATH
if [ "${PATH}" = "" ] ;then
	PATH="/bin:/usr/sbin:/usr/local/bin:/usr/bin/X11:/sw/bin"
else
	PATH="${PATH}:/bin:/usr/sbin:/usr/local/bin:/usr/bin/X11:/sw/bin"
fi
export PATH

if [ "${TMPDIR}" = "" ] ;then
	TMPDIR="/tmp"
fi

# GS2PDF="/usr/local/bin/ps2pdf14" ; export GS2PDF
GS2PDF="`which ps2pdf14`" 
export GS2PDF

if [ "`basename $0`" = "ps2pdf.apple" -o ! -x "${GS2PDF}" ] ;then
	PS2PDF="Preview" ; export PS2PDF
fi

FILE=${TMPDIR}/pdfprevw$$
# LOG="${FILE}.log"
LOG="${TMPDIR}/ps2pdf.preview.log"
TMP=${FILE}.ps
OUTPUT=${FILE}.pdf

if [ -x "/bin/echo" ] ;then
	ECHO="/bin/echo"
elif [ -x "/opt/local/bin/echo" ] ;then
	ECHO="/opt/local/bin/echo"
else
	ECHO="/usr/local/bin/echo"
fi
export ECHO

if [ $# != 0 ] ;then
	${ECHO} "Converting $*"
	INPUT="$*"
# 	CAT="cat ${INPUT}"
# RJVB 20020219: my (rless) version of less is capable of displaying/decoding a large number of different formats (gzip, bzip2,...):
	CAT="rless ${INPUT}"
else
	INPUT="-"
	CAT="cat ${INPUT}"
fi
if [ "$ACROREAD" = "" ] ;then
	if [ "${DESKTOP_SESSION}" = "gnome" ] ;then
		ACROREAD=evince
		WAIT=""
		${CAT} > "${TMP}"
	elif [ "`uname`" = "Darwin" ] ;then
		ACROREAD="open"
# 		ACROREAD="open -a /Applications/Preview.app"
		WAIT="sleep 10"
		${CAT} | sed -e 's/\(^%%For.*\)\\303\\251/\1é/g'  -e 's/\(^%%For.*\)Ã©/\1é/g' > "${TMP}"
	elif [ "${DESKTOP_SESSION}" = "kde-plasma" ] ;then
		ACROREAD="okular"
		WAIT="sleep 10"
		${CAT} > "${TMP}"
	else
		ACROREAD=acroread
		WAIT=""
		${CAT} > "${TMP}"
	fi
fi
export ACROREAD
export WAIT

if [ "$GS_FONTPATH" = "" ] ;then
	if [ "$CUPS_FONTPATH" != "" ] ;then
		GS_FONTPATH="$CUPS_FONTPATH" ; export GS_FONTPATH
	fi
fi


ls -lsF "${TMP}" 2>&1 | tee "${LOG}"

#20050108: pick a more appropriate output filename:
TITLE="`grep -a '^%%Title' ${TMP} | head -1`"
if [ $? = 0 ] ;then
	set -x
	#FNAME="`${ECHO} -n \"${TITLE}\" | sed  -e 's/%%Title:[ 	]*//g' -e 's///g' -e 's,[#/\[\*?()|],,g' -e 's/]//g' -e 's/ /_/g'`"
	FNAME="`${ECHO} -n \"${TITLE}\" | sed -e 's/%%Title:[ 	]*//g' -e 's///g' -e 's,[#/\[\*?()|],,g' -e 's/]//g' | tr -d '\200-\377'`"
	if [ "${FNAME}" = "" ] ;then
		FNAME="pdfprevw"
	fi
	${ECHO} "Output to \"${FNAME}\"" 2>&1  | tee -a "${LOG}"
	OUTPUT="${TMPDIR}/${FNAME}-$$.pdf"
	AOUTPUT="${TMPDIR}/${FNAME}-$$.ps"
	set +x
else
	AOUTPUT="${TMP}"
fi

${ECHO} "${TITLE}" 2>&1 | tee -a "${LOG}"
# egrep '^%%Creator|^%%For' "${TMP}" 2>&1 | tee -a "${LOG}"
BYFOR="`egrep '^%%Creator|^%%For' ${TMP}`" #2>&1 | tee -a "${LOG}"
${ECHO} "${BYFOR}" 2>&1 | tee -a "${LOG}"

${ECHO} "${BYFOR}" | grep 'Creator:.*cgpdftops CUPS filter)'   2>&1 >/dev/null
if [ $? = 0 -a "$PS2PDF" != "." ] ;then
	${ECHO} "### 20050201: output generated by Apple's cgpdftops is best re-converted with Preview!" 2>&1 > "${LOG}"
	PS2PDF="Preview" ; export PS2PDF
fi

# cp -p "${TMP}" ${TMPDIR}/ps2pdf.prv.ps

cd ${TMPDIR}
# 20030207 RJVB: bumped to using 1.4 format.
if [ "$PS2PDF" != "" -a "$PS2PDF" != "." ] ;then
	 # choose Apple's Preview, for instance!
	ln "${TMP}" "${AOUTPUT}"
	WAIT="sleep 30"
	export WAIT
	(time open -a "${PS2PDF}" "${AOUTPUT}" ; ${WAIT} ; rm -f "${TMP}" "${AOUTPUT}" "${FILE}.log" & ) 2>&1 | tee -a "${LOG}" &
	set +x

else

	if [ "${PAPERSIZE}" = "" ] ;then
# 		PAPERSIZE="-dEPSFitPage"
		PAPERSIZE="-dEPSCrop"
	else
		case ${PAPERSIZE} in
			a[0-9])
				PAPERSIZE="-sPAPERSIZE=${PAPERSIZE}"
				${ECHO} "# PAPERSIZE=${PAPERSIZE}"
				;;
		esac
	fi

#	( time ${GS2PDF} ${PAPERSIZE} -dPDFSettings=/prepress "${TMP}" "${OUTPUT}" 2>&1 | tee -a "${LOG}" ; ls -lsF "${OUTPUT}" ; ${ACROREAD} "${OUTPUT}" ; ${WAIT} ; rm -f "${TMP}" "${OUTPUT}" "${FILE}.log" & )&
	( ( time ${GS2PDF} ${PAPERSIZE} -dPDFSettings=/prepress "${TMP}" "${OUTPUT}"  ; ls -lhsF "${OUTPUT}" ; ${ACROREAD} </dev/null "${OUTPUT}" ; ${WAIT} ; rm -f "${TMP}" "${OUTPUT}" "${FILE}.log" & ) 2>&1 | tee -a "${LOG}" & ) &
fi
