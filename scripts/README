These are a series of scripts by my hand that have evolved over the years of developing software
for my own needs, on Unix and Unix-like operating systems. Most are convenience wrappers to standard
commands, aiming to make it easier to customise matters to my tastes and needs.
(C) 1990 - 201x RJVB

gccopt: a wrapper around the compiler (gcc by default), conceived to invoke the compiler with a set
	of flags for optimal performance of the compiled code. Reads those settings from a wmachine script
	~/.Preferences/.dev . If ./emsg exists, it will save the entire terminal output of the compilation
	in a file under that directory (which will receive a .err extension if compilation fails), named
	after the file to compile or object to link.

wconfigure: invokes the standard configure command, either in the current directory or in $CONFIGURE.
	It reads environment variables from wconfigure.env first, filling these variables with sensible
	defaults determined from gccopt if none exist. Saves the modified wconfigure.env before exitting,
	as well as its invocation in wconfigure.call .

wmake: invokes the make command after applying the settings from wconfigure.env

wcheckinstall: invokes the checkinstall command after applying the settings from wconfigure.env

wbuild: invokes any command after applying the settings from wconfigure.env (so wbuild make is identical to wmake)

wcmake: wrapper around the cmake command that applies settings from wconfigure.env, stores its invocation in
	wcmake.arg and reads additional arguments to pass to cmake from wcmake.args .
