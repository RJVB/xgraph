]0;/Users/bertin/Library/xgraph/xg_init.xg: 0% (0 of 4415): line 0.0
Current xgraph info:
 xgraph Python.27.so examples/PythonBench.xg
 XGraph build (64 bit) version 20101111; gcc4.2.1[Apr 14 2012 13:34:34,"Darwin portia.local 10.8.0 x86_64 ; CC='gccopt -DXGRAPH  ' ACC='gccopt -DXGRAPH  '"]
 Executed d.d. Sat Apr 14 15:09:21 2012
 Working directory: /Volumes/Debian/Users/bertin/work/src/xgraph
 Last opened on display :1.0/-1/-1 (visual 0x22, 24 planes TrueColor) by bertin


]0;Python.27.so: 0% (0 of 431920): line 0.0You're loading a shared library: will load it as a dynamic module!
Python/Python.c::initDyMod(): Initialising Python.27.so loaded from ./Python.27.so (build: XGraph v20101111 'Python/Python.c'-[Apr 14 2012,15:08:50]), call 1
Python/Python.c loading Python ......  2.7.3 (default, Apr 13 2012, 15:54:20) 
[GCC 4.2.1 (Apple Inc. build 5664)]
Loaded module Python.27.so from ./Python.27.so, total modules 1
	(XGraph v20101111 'Python/Python.c'-[Apr 14 2012,15:08:50] compiled with Python 2.7.3)
 A dynamic module (library) that contains
 hooks to interface with the Python language.
No numerical data in "Python.27.so"
]0;examples/PythonBench.xg: 0% (0 of 5474): line 0.0Python/Python.c::initDyMod(): Initialising Python.so loaded from ./Python.so (build: XGraph v20101111 'Python/Python.c'-[Apr 14 2012,15:08:50]), call 2
100000 1000000
#1: 	verbose[ Python-Eval[ "ExportVariable('NoOp',idle, as_PObj=1 )" ] ] *EVAL*
#		&"Xx13e8508727bd3475a9"={0x1016e5ae0:0x12345600|0x4}==0xb72d70:12345604
#3 	DCL[0,0]== 0	->
#		`"ExportVariable('NoOp',idle, as_PObj=1 )"={0x1016e5ae0:0x22345600|0x4}==0xb72d70:22345604
#		`"ExportVariable('NoOp',idle, as_PObj=1 )"={0x1016e5ae0:0x22345600|0x100000004}==0xb72d70:22345604
#2 	Python-Eval[`"ExportVariable('NoOp',idle, as_PObj=1 )"]==  (0xb72d70:22345604=={0xb72d70:0x22345604}==`"ExportVariable('NoOp',idle, as_PObj=1 )":"ExportVariable('NoOp',idle, as_PObj=1 )")== #		&NoOp={0x1016e5e40:0x12345600|0xccccccc00000004}==0xb72f20:12345604
#1 	DCL[0]== 0	  ,
 (can't determine nr. of arguments to python function "idle", allowing the current ascanf maximum for "NoOp") #		&NoOp={0x1016e5e40:0x12345600|0x100000009}==0xb72f20:12345609
0	->
#1 	verbose[0]== 0	  ,
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, add[ 1, 2, 3, 4, 5] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.712e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, call[&add, 1, 2, 3, 4, 5] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.466e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): call(a_add, (1,2,3,4,5));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 9.210e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): callr(a_add, (1,2,3,4,5));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.954e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): call(a_addP, (1,2,3,4,5));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.536e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): callr(a_addP, (1,2,3,4,5));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.269e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ Python-Eval[ "print a_addP.reentrant()"] ] *EVAL*
#		&"Xx239239ebb254da97dc"={0x1016e81a0:0x12345600|0x100000004}==0xb740d0:12345604
#sc:4 	DCL[0,0]== 0	->
#		`"print a_addP.reentrant()"={0x1016e81a0:0x22345600|0x4}==0xb740d0:22345604
#		`"print a_addP.reentrant()"={0x1016e81a0:0x22345600|0x7fff00000004}==0xb740d0:22345604
 (0xb740d0:22345604=={0xb740d0:0x22345604}==`"print a_addP.reentrant()":"print a_addP.reentrant()")== #ac:3 	Python-Eval[`"print a_addP.reentrant()"]== 0	->
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): a_addP(1,2,3,4,5);" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.479e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ Python-Eval[ "print a_addP.reentrant(0)"] ] *EVAL*
#		&"Xx2524094944fbaf5dd4"={0x1016e8b40:0x12345600|0x100000004}==0xb745a0:12345604
#sc:4 	DCL[0,0]== 0	->
#		`"print a_addP.reentrant(0)"={0x1016e8b40:0x22345600|0x4}==0xb745a0:22345604
#		`"print a_addP.reentrant(0)"={0x1016e8b40:0x22345600|0x100000004}==0xb745a0:22345604
 (0xb745a0:22345604=={0xb745a0:0x22345604}==`"print a_addP.reentrant(0)":"print a_addP.reentrant(0)")== #ac:3 	Python-Eval[`"print a_addP.reentrant(0)"]== 0	->
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): a_addP(1,2,3,4,5);" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.006e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): call(a_call, (a_add, 1,2,3,4,5));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 9.566e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): call(a_call, a_args);" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.964e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): callr(a_call, a_args);" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.302e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "call(a_call, a_args, N2)" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.926e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "callr(a_call, a_args, N2)" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.976e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-EvalValue[ "for i in xrange(N): ascanf.ReturnValue= ImportVariable('$loop');" ] ] ], ?Python-EvalValue ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.459e-05s (0% CPU)
#ac:2 	verbose[0,NaN]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "ascanf.ReturnValue= ImportVariable('$loop')" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.642e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-EvalValue[ "ascanf.ReturnValue= ImportVariable('$loop')" ] ] ] ], ?Python-EvalValue ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 9.625e-05s (0% CPU)
#ac:2 	verbose[0,NaN]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ DCL[cexpr,Python-Compile[ "ascanf.ReturnValue= ImportVariable('$loop')" ]], for-toMAX[0, N, Python-EvalValueCompiled[cexpr]  ] ] ], ?Python-EvalValueCompiled ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 2.549e-04s (0% CPU)
#ac:2 	verbose[0,NaN]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N): kk= int(ImportVariable('$loop'));" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.863e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "kk= int(ImportVariable('$loop'))" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.202e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N): ImportVariable('$loop');" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.162e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "ImportVariable('$loop')" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.781e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ DCL[cexpr, Python-Compile[ "ImportVariable('$loop')" ]], for-toMAX[0, N, Python-EvalCompiled[cexpr] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.607e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "idle(kk,'$loop')" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.615e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "idle(1,'$loop')" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.560e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ DCL[cexpr2, Python-Compile[ "idle(1,'$loop')" ]], for-toMAX[0, N, Python-EvalCompiled[cexpr2] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.665e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "idle(1)" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.705e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[ "idle()" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.575e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ DCL[cexpr3, Python-Compile[ "idle()" ]], for-toMAX[0, N, Python-EvalCompiled[cexpr3] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.582e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Call[ &NoOp, 1,"$loop" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.163e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Call[ &NoOp, 1 ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 4.967e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, Python-Call[ &NoOp ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 4.807e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, NoOp[ 1, "$loop" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 1.031e-04s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, NoOp[ 1 ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 4.835e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N, NoOp[,] ] ] ] ] *EVAL*
#ac:6 	NoOp called with empty argument list while compiling
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 4.034e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N): idle(kk,'$loop');" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.559e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N): idle(1);" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.405e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N): idle();" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 6.491e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[ "kk" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 9.172e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[ "1" ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 8.088e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[ 0 ] ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 5.143e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, $loop ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 3.438e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ Python-Eval[ "for i in xrange(N2): i;" ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 7.528e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2, 0 ] ] ] ] *EVAL*
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 4.434e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
#ac2: 	verbose[ system.time[ no-verbose[ for-toMAX[0, N2 ] ] ] ] *EVAL*
#ac5 	 for-toMAX[0, N2 ]  :
#ac5 	"for-toMAX[0, N2 ]" warning: function call with only 2 parameters
#ac:3 	system.time[0]== <delayed!>	->
## Compilation time: user 0s, system 0s, total 3.961e-05s (0% CPU)
#ac:2 	verbose[0]== 0	->
## Compilation time: user 0.01000s, system 0s, total 0.005820s (171.8% CPU)
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ 
#C3: 	    for-toMAX[0, N2, add[<C>1, 2, 3, 4, 5]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.14:0.143134s>	->
#C# Evaluation time 'no-verbose': user 0.1400s, system 0s, total 0.1432s (97.81% CPU)
#C2 	verbose[0.1400]== 0.1400 <0:3.1419e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ 
#C3: 	    for-toMAX[0, N2, call[<C>&add, 1, 2, 3, 4, 5]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.2:0.194s>	->
#C# Evaluation time 'no-verbose': user 0.2000s, system 0s, total 0.1940s (103.1% CPU)
#C2 	verbose[0.2000]== 0.2000 <0:3.0646e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): call(a_add, (1,2,3,4,5));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.43:0.438886s>	->
#C# Evaluation time 'no-verbose': user 0.4300s, system 0s, total 0.4389s (97.97% CPU)
#C2 	verbose[0.4300]== 0.4300 <0:3.0823e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): callr(a_add, (1,2,3,4,5));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.91:0.910012s>	->
#C# Evaluation time 'no-verbose': user 0.9100s, system 0s, total 0.9100s (100.00% CPU)
#C2 	verbose[0.9100]== 0.9100 <0:2.9822e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): call(a_addP, (1,2,3,4,5));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.41:0.406567s>	->
#C# Evaluation time 'no-verbose': user 0.4100s, system 0s, total 0.4066s (100.9% CPU)
#C2 	verbose[0.4100]== 0.4100 <0:3.04e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): callr(a_addP, (1,2,3,4,5));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.87:0.874041s>	->
#C# Evaluation time 'no-verbose': user 0.8700s, system 0s, total 0.8741s (99.54% CPU)
#C2 	verbose[0.8700]== 0.8700 <0:3.0209e-05s>	->
#C2: 	verbose[
#C3: 	    Python-Eval[<C>`"print a_addP.reentrant()"]
#C2: 	] *EVAL*
#		`"print a_addP.reentrant()"={0x1016e81a0:0x22345600|0x4}==0xb740d0:22345604
#Cecal4: 	`"print a_addP.reentrant()"==`"print a_addP.reentrant()"
#C3 	Python-Eval[<C>`"print a_addP.reentrant()"]==  (0xb740d0:22345604=={0xb740d0:0x22345604}==`"print a_addP.reentrant()":"print a_addP.reentrant()")== 0 <0:0.000116804s>	->
#C2 	verbose[0]== 0 <0:1.5753e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): a_addP(1,2,3,4,5);"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.74:0.730237s>	->
#C# Evaluation time 'no-verbose': user 0.7300s, system 0.01000s, total 0.7303s (101.3% CPU)
#C2 	verbose[0.7300]== 0.7300 <0:3.0088e-05s>	->
#C2: 	verbose[
#C3: 	    Python-Eval[<C>`"print a_addP.reentrant(0)"]
#C2: 	] *EVAL*
#		`"print a_addP.reentrant(0)"={0x1016e8b40:0x22345600|0x4}==0xb745a0:22345604
#Cecal4: 	`"print a_addP.reentrant(0)"==`"print a_addP.reentrant(0)"
#C3 	Python-Eval[<C>`"print a_addP.reentrant(0)"]==  (0xb745a0:22345604=={0xb745a0:0x22345604}==`"print a_addP.reentrant(0)":"print a_addP.reentrant(0)")== 0 <0:0.000114677s>	->
#C2 	verbose[0]== 0 <0:2.0776e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): a_addP(1,2,3,4,5);"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.34:0.339897s>	->
#C# Evaluation time 'no-verbose': user 0.3400s, system 0s, total 0.3399s (100.0% CPU)
#C2 	verbose[0.3400]== 0.3400 <0:2.9518e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): call(a_call, (a_add, 1,2,3,4,5));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.55:0.551745s>	->
#C# Evaluation time 'no-verbose': user 0.5500s, system 0s, total 0.5518s (99.68% CPU)
#C2 	verbose[0.5500]== 0.5500 <0:3.0162e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): call(a_call, a_args);"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.47:0.467209s>	->
#C# Evaluation time 'no-verbose': user 0.4700s, system 0s, total 0.4672s (100.6% CPU)
#C2 	verbose[0.4700]== 0.4700 <0:3.0215e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): callr(a_call, a_args);"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.96:0.960464s>	->
#C# Evaluation time 'no-verbose': user 0.9600s, system 0s, total 0.9605s (99.95% CPU)
#C2 	verbose[0.9600]== 0.9600 <0:2.9879e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"call(a_call, a_args, N2)"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.08:0.0858373s>	->
#C# Evaluation time 'no-verbose': user 0.07000s, system 0.01000s, total 0.08584s (93.19% CPU)
#C2 	verbose[0.07000]== 0.07000 <0:2.9623e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"callr(a_call, a_args, N2)"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.08:0.0742118s>	->
#C# Evaluation time 'no-verbose': user 0.08000s, system 0s, total 0.07422s (107.8% CPU)
#C2 	verbose[0.08000]== 0.08000 <0:4.5148e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-EvalValue[<C>
#C3: 	    `"for i in xrange(N): ascanf.ReturnValue= ImportVariable('$loop');"] ] ], 
#C3: 	    ?Python-EvalValue
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.04:0.0435257s>	->
#C# Evaluation time 'no-verbose': user 0.04000s, system 0s, total 0.04353s (91.89% CPU)
#C2 	verbose[0.04000,0]== return[0]== 0 <0:3.4795e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>
#C3: 	        `"ascanf.ReturnValue= ImportVariable('$loop')"]
#C3: 	    ] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.72:1.71927s>	->
#C# Evaluation time 'no-verbose': user 1.720s, system 0s, total 1.719s (100.1% CPU)
#C2 	verbose[1.720]== 1.720 <0:2.934e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-EvalValue[<C>
#C3: 	        `"ascanf.ReturnValue= ImportVariable('$loop')"]
#C3: 	    ] ] ], ?Python-EvalValue
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.68:1.68899s>	->
#C# Evaluation time 'no-verbose': user 1.680s, system 0s, total 1.689s (99.47% CPU)
#C2 	verbose[1.680,1.000e+05]== return[0]== 0 <0:3.6104e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ DCL[cexpr, Python-Compile[<C>`"ascanf.ReturnValue= ImportVariable('$loop')"]], 
#C3: 	    for-toMAX[0, N, Python-EvalValueCompiled[<C>cexpr]] ] ], ?Python-EvalValueCompiled
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.11:0.107749s>	->
#C# Evaluation time 'no-verbose': user 0.1100s, system 0s, total 0.1078s (102.1% CPU)
#C2 	verbose[0.1100,1.000e+05]== return[0]== 0 <0:3.7038e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N): kk= int(ImportVariable('$loop'));"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.06:0.0543928s>	->
#C# Evaluation time 'no-verbose': user 0.06000s, system 0s, total 0.05440s (110.3% CPU)
#C2 	verbose[0.06000]== 0.06000 <0:2.9822e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"kk= int(ImportVariable('$loop'))"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.85:1.84944s>	->
#C# Evaluation time 'no-verbose': user 1.840s, system 0.01000s, total 1.850s (100.0% CPU)
#C2 	verbose[1.840]== 1.840 <0:2.9902e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N): ImportVariable('$loop');"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.04:0.0349272s>	->
#C# Evaluation time 'no-verbose': user 0.04000s, system 0s, total 0.03493s (114.5% CPU)
#C2 	verbose[0.04000]== 0.04000 <0:2.7547e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"ImportVariable('$loop')"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.38:1.38404s>	->
#C# Evaluation time 'no-verbose': user 1.380s, system 0s, total 1.384s (99.71% CPU)
#C2 	verbose[1.380]== 1.380 <0:2.9314e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ DCL[cexpr, Python-Compile[<C>`"ImportVariable('$loop')"]], for-toMAX[0, N, 
#C3: 	        Python-EvalCompiled[<C>cexpr]
#C3: 	    ] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.06:0.059311s>	->
#C# Evaluation time 'no-verbose': user 0.06000s, system 0s, total 0.05932s (101.2% CPU)
#C2 	verbose[0.06000]== 0.06000 <0:3.027e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"idle(kk,'$loop')"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.41:1.41443s>	->
#C# Evaluation time 'no-verbose': user 1.410s, system 0s, total 1.415s (99.69% CPU)
#C2 	verbose[1.410]== 1.410 <0:3.0017e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"idle(1,'$loop')"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.42:1.41557s>	->
#C# Evaluation time 'no-verbose': user 1.420s, system 0s, total 1.416s (100.3% CPU)
#C2 	verbose[1.420]== 1.420 <0:2.9148e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ DCL[cexpr2, Python-Compile[<C>`"idle(1,'$loop')"]], for-toMAX[0, N, 
#C3: 	        Python-EvalCompiled[<C>cexpr2]
#C3: 	    ] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.03:0.0305049s>	->
#C# Evaluation time 'no-verbose': user 0.03000s, system 0s, total 0.03051s (98.33% CPU)
#C2 	verbose[0.03000]== 0.03000 <0:2.8536e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"idle(1)"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.25:1.24974s>	->
#C# Evaluation time 'no-verbose': user 1.250s, system 0s, total 1.250s (100.0% CPU)
#C2 	verbose[1.250]== 1.250 <0:3.0085e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Eval[<C>`"idle()"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <1.06:1.06009s>	->
#C# Evaluation time 'no-verbose': user 1.060s, system 0s, total 1.060s (99.99% CPU)
#C2 	verbose[1.060]== 1.060 <0:3.0135e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ DCL[cexpr3, Python-Compile[<C>`"idle()"]], for-toMAX[0, N, 
#C3: 	        Python-EvalCompiled[<C>cexpr3]
#C3: 	    ] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.02:0.0275058s>	->
#C# Evaluation time 'no-verbose': user 0.02000s, system 0s, total 0.02751s (72.70% CPU)
#C2 	verbose[0.02000]== 0.02000 <0:2.935e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ 
#C3: 	    for-toMAX[0, N, Python-Call[&NoOp, 1, `"$loop"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.09:0.0791701s>	->
#C# Evaluation time 'no-verbose': user 0.08000s, system 0.01000s, total 0.07920s (113.7% CPU)
#C2 	verbose[0.08000]== 0.08000 <0:4.8892e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Call[&NoOp, 1]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.04:0.0444699s>	->
#C# Evaluation time 'no-verbose': user 0.04000s, system 0s, total 0.04448s (89.93% CPU)
#C2 	verbose[0.04000]== 0.04000 <0:4.5404e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, Python-Call[&NoOp]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.03:0.0335067s>	->
#C# Evaluation time 'no-verbose': user 0.03000s, system 0s, total 0.03351s (89.52% CPU)
#C2 	verbose[0.03000]== 0.03000 <0:3.0735e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, NoOp[<C>1, `"$loop"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.06:0.0545991s>	->
#C# Evaluation time 'no-verbose': user 0.05000s, system 0.01000s, total 0.05461s (109.9% CPU)
#C2 	verbose[0.05000]== 0.05000 <0:3.0059e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, NoOp[<C>1]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.03:0.0324556s>	->
#C# Evaluation time 'no-verbose': user 0.03000s, system 0s, total 0.03246s (92.42% CPU)
#C2 	verbose[0.03000]== 0.03000 <0:2.9794e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N, NoOp] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.02:0.018847s>	->
#C# Evaluation time 'no-verbose': user 0.02000s, system 0s, total 0.01885s (106.1% CPU)
#C2 	verbose[0.02000]== 0.02000 <0:2.6121e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N): idle(kk,'$loop');"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.01:0.0142576s>	->
#C# Evaluation time 'no-verbose': user 0.01000s, system 0s, total 0.01426s (70.11% CPU)
#C2 	verbose[0.01000]== 0.01000 <0:2.7026e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N): idle(1);"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.01:0.0105254s>	->
#C# Evaluation time 'no-verbose': user 0.01000s, system 0s, total 0.01053s (94.97% CPU)
#C2 	verbose[0.01000]== 0.01000 <0:2.5362e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N): idle();"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.01:0.00870586s>	->
#C# Evaluation time 'no-verbose': user 0.01000s, system 0s, total 0.008711s (114.8% CPU)
#C2 	verbose[0.01000]== 0.01000 <0:2.5849e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[<C>`"kk"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <10.01:10.0114s>	->
#C# Evaluation time 'no-verbose': user 10s, system 0.01000s, total 10.01s (99.99% CPU)
#C2 	verbose[10]== 10 <0:3.7093e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[<C>`"1"]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <8.74:8.73115s>	->
#C# Evaluation time 'no-verbose': user 8.730s, system 0.01000s, total 8.731s (100.1% CPU)
#C2 	verbose[8.730]== 8.730 <0:3.0307e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[0, N2, Python-Eval[<C>0]] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.12:0.125623s>	->
#C# Evaluation time 'no-verbose': user 0.1200s, system 0s, total 0.1256s (95.52% CPU)
#C2 	verbose[0.1200]== 0.1200 <0:3.0244e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[<C>0, N2, $loop] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.03:0.0320332s>	->
#C# Evaluation time 'no-verbose': user 0.03000s, system 0s, total 0.03204s (93.64% CPU)
#C2 	verbose[0.03000]== 0.03000 <0:2.5309e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ Python-Eval[<C>`"for i in xrange(N2): i;"] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.06:0.0589307s>	->
#C# Evaluation time 'no-verbose': user 0.06000s, system 0s, total 0.05894s (101.8% CPU)
#C2 	verbose[0.06000]== 0.06000 <0:4.7992e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[<C>0, N2, 0] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0.03:0.0311135s>	->
#C# Evaluation time 'no-verbose': user 0.03000s, system 0s, total 0.03112s (96.41% CPU)
#C2 	verbose[0.03000]== 0.03000 <0:2.845e-05s>	->
#C2: 	verbose[
#C3: 	    system.time[ no-verbose[ for-toMAX[<C>0, N2] ] ]
#C2: 	] *EVAL*
#C3 	system.time[0]== <delayed!> <0:1.1844e-05s>	->
#C# Evaluation time 'no-verbose': user 0s, system 0s, total 1.576e-05s (0% CPU)
#C2 	verbose[0]== 0 <0:2.1946e-05s>	->
#C# Evaluation time 'verbose': user 37.53s, system 0.07000s, total 37.61s (99.97% CPU)
]0;examples/PythonBench.xg: 100% (5474 of 5474): line 0.73Only (5) command(s) in "examples/PythonBench.xg"
xgraph: maxitems=0, setNumber=0; no data found
Python/Python.c::closeDyMod(1): Closing Python.so loaded from ./Python.so, call 1<function PyAscanfObject "add">
1
0


Python/Python.c::closeDyMod(1): Closing Python.27.so loaded from ./Python.27.so, call 2
